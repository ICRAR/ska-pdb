.page-content
  .export-section
    %h2 Export selected
    .selected-parameters
      = render @cart

    .export-as
      Format:
      - formats = {"XML" => :xml, "PDF" => :pdf, "Java" => :java}
      = select("export_format", "", formats.collect { |label, param| [label, export_path(:format => param)] })
    = button_to_function "Export", "window.open($('#export_format_').val(), '_blank')", { :class => 'export-button'}

  #search_results.content-table
    .table-pagination-before
      .page_info
        = page_entries_info @parameters
      .digg_pagination
        = will_paginate @parameters, :container => true

      %label{ :style => 'display: none;', :for => 'page_size'} Page Size
      %select{ :id => "page_size", :onchange => "window.location.href = '#{get_page_sizing_path}&page_size=' + $(this).val();" }
        = options_for_select ["10", "20", "50", "100"], get_page_size

    %table
      %thead
        %th Name
        %th Unit
        %th Source
        %th Expression
        %th Description
        %th
      %tbody
        - @parameters.each do |p|
          %tr.parameter{:onclick =>"location.href='#{current_user && current_user.admin? ? edit_parameter_path(p) : parameter_path(p)}'"}
            %td
              = parameter_name(p)
            %td
              = p.unit.empty? ? raw("&nbsp;") : render_latex(p.unit)
            %td
              = p.source.empty? ? raw("&nbsp;") : p.source
            %td
              = p.expression.empty? ? raw("&nbsp;") : p.expression
            %td
              = p.description
            %td
              = button_to 'Add', line_items_path(:parameter_id => p.id), :remote => true, :onclick => "var event = arguments[0] || window.event; event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;"

    .table-pagination-after
      .page_info
        = page_entries_info @parameters
      .digg_pagination
        = will_paginate @parameters, :container => true
      %div{:style => 'clear:both;'}
